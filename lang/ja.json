{
    "AntiCamp.Notification.DetectedAsCamping": "芋として検出されました。\n 動いてください!",
    "General.Command.Notification.CourseMapOnly": "course系のマップでのみ使用可能です！",
    "General.Command.Notification.MultiGamesMapOnly": "multigames系のマップでのみ使用可能です！",
    "General.Command.Notification.ShouldBeAlive": "このコマンドを使用するには生きている必要があります。",
    "General.Command.Notification.FeatureDisabled": "この機能は無効になっています。",
    "General.Command.Notification.NotUsableCurrently": "このコマンドは現在使用できません。",
    "General.Command.Vote.Notification.AnotherVoteInProgress": "すでに別の投票が開始されています！",
    "General.Command.Notification.UnknownError": "コマンドの処理中に予期しないエラーが発生しました！！！",
    "CourseWeapon.Command.Notification.AlreadyHave": "すでに {0} を持っています！",
    "CourseWeapon.Command.Notification.Retrieved": "{0} を入手しました！",
    "General.Command.Vote.Notification.FailedToInitiate": "投票の開始に失敗しました！",
    "Misc.Knife.Command.Notification.AlreadyHave": "すでにナイフを持っています!",
    "Misc.Knife.Command.Notification.Retrieved": "新しいナイフを入手しました!",
    "Misc.Spectate.Command.Notification.MovedToSpectator": "観戦者に移動しました!",
    "Misc.Spectate.Command.Notification.OnlyDeadOrSpectator": "死亡しているか観戦者の時にのみプレイヤーを観戦できます。",
    "Misc.Spectate.Command.Notification.MultipleTargetsFound": "複数のターゲットが見つかりました! 1人のターゲットを指定してください! ({0} 発見)",
    "Misc.Spectate.Command.Notification.NowSpectating": "現在{0}を観戦中です。",
    "ScheduledShutdown.Notification.AfterRoundEnd": "ラウンド終了後にサーバーがシャットダウンします",
    "ScheduledShutdown.Notification.Countdown": "サーバーは{0}秒後にシャットダウンします。",
    "ScheduledShutdown.Notification.CancelShutdown": "{0}によりサーバーシャットダウンがキャンセルされました",
    "ScheduledShutdown.Notification.InitiateShutdown": "{0}によりサーバーシャットダウンが開始されました",
    "VoteRoundRestart.Command.Notification.AlreadyRestarting": "ラウンドはすでにリスタート中です!",
    "VoteRoundRestart.Vote.SubjectText": "現在のラウンドをリスタートしますか?",
    "VoteRoundRestart.Notification.VoteInitiated": "ラウンドリスタートの投票が開始されました。",
    "VoteRoundRestart.Notification.VoteFailed": "投票が否決されました! ラウンドのリスタートは行われません。",
    "VoteRoundRestart.Notification.RoundRestart": "投票が可決されました! ラウンドは{0}秒後にリスタートされます。",
    "VoteRoundRestart.Notification.ForceRoundRestart": "ラウンドは{0}秒後にリスタートされます。",
    "VoteMapRestart.Command.Notification.AlreadyRestarting": "マップはすでにリロード中です!",
    "VoteMapRestart.Command.Notification.AllowedTimeIsEnded": "マップリロード可能な時間は終了しました! 新しいマップがロードされるまでリロードできません。",
    "VoteMapRestart.Vote.SubjectText": "現在のマップをリロードしますか？",
    "VoteMapRestart.Notification.VoteInitiated": "マップリロードの投票が開始されました。",
    "VoteMapRestart.Notification.VoteFailed": "投票が否決されました! マップのリロードは行われません。",
    "VoteMapRestart.Notification.MapRestart": "投票が可決されました! マップは{0}秒後に再読み込みされます。",
    "Respawn.Notification.AdminEnabledRespawn": "管理者{0}が自動リスポーンを有効にしました",
    "Respawn.Notification.RepeatKillDetected": "連続キルが検出されました! このラウンドのリスポーンは{darkred}無効化{default}されます。",
    "Respawn.Notification.Respawned": "リスポーンしました!",
    "HideLegs.Command.Notification.HideLegs": "足モデルを{red}非表示{default}にします",
    "HideLegs.Command.Notification.ShowLegs": "足モデルが{green}表示{default}されます",
    "HideLegs.Command.Notification.NotAvailable": "足モデル非表示機能は現在使用できません",
    "ExternalView.FirstPerson.Revert": "{grey}通常視点{default}に戻します",
    "ExternalView.FirstPerson.OnNextSpawn": "次回のスポーンから{grey}通常視点{default}を使用します",
    "ExternalView.ThirdPerson.Start": "{green}三人称視点{default}に変更します",
    "ExternalView.ThirdPerson.Update": "{grey}三人称視点の設定が更新されました{default}",
    "ExternalView.ThirdPerson.Revert": "{green}三人称視点{default}に戻します",
    "ExternalView.ThirdPerson.OnNextSpawn": "次回のスポーンから{green}三人称視点{default}を使用します",
    "ExternalView.ThirdPerson.CameraDistance.OutOfRange": "{grey}三人称視点カメラ距離の有効範囲:{default} {lightpurple}{0}{default} ~ {lightpurple}{1}{default}",
    "ExternalView.ThirdPerson.CameraDistance.Set": "三人称視点カメラ距離を{lightpurple}{0}{default}に設定しました.",
    "ExternalView.ModelView.Start": "{orange}モデルビュー{default}カメラに変更します",
    "ExternalView.ModelView.EndedByJump": "{grey}モデルビューカメラはジャンプによって解除されました{default}",
    "ExternalView.FreeCam.Start": "{orange}フリー{default}カメラに変更します",
    "ExternalView.FreeCam.RequirePermission": "{grey}フリーカメラを使用するには権限が必要です{default}",
    "ExternalView.Watch.Start": "{orange}ウォッチ{default}カメラに変更します",
    "ExternalView.Watch.FailedToFindInitialTarget": "{grey}ターゲットを見つけることが出来ませんでした。ターゲットはランダムに選択されます{default}",
    "ExternalView.Watch.FailedToFindTarget": "{grey}ターゲットを見つけることが出来ませんでした{default}",
    "ExternalView.Watch.EndedByNoCandidates": "{grey}ウォッチカメラは使用する対象が居ないため解除されました{default}",
    "ExternalView.Watch.RequirePermission": "{grey}ウォッチカメラを使用するには権限が必要です{default}",
    "VelocityDisplay.Command.Notification.HudEnabled": "速度表示を{green}有効{default}にしました。",
    "VelocityDisplay.Command.Notification.HudDisabled": "速度表示を{red}無効{default}にしました。",
    "Omikuji.Command.Notification.NotReady": "おみくじはまだ準備ができていません! しばらくお待ちください!",
    "Omikuji.Command.Notification.Cooldown": "おみくじはクールダウン中です! {0}秒お待ちください。",
    "Omikuji.Command.Notification.Drawing": "{0}が おみくじを引いています!",
    "Omikuji.Events.Notification.BadLuck": "{0}が不運を引き当てました!",
    "Omikuji.Events.Notification.Luck": "{0}が幸運を引き当てました!",
    "Omikuji.Events.Notification.Misc": "{0}が何かを引きました!",
    "Omikuji.BadEvent.GravityChangeEvent.Notification.AnotherEventOnGoing": "しかし幸運にも、別のイベントが進行中のため何も起こらなかった!",
    "Omikuji.BadEvent.GravityChangeEvent.Notification.GravityChanged": "sv_gravityが{1}に変更されました",
    "Omikuji.BadEvent.GravityChangeEvent.Notification.GravityRestored": "重力が{0}に戻りました!",
    "Omikuji.BadEvent.PlayerFreezeEvent.Notification.Froze": "{0}が凍結しました!",
    "Omikuji.BadEvent.PlayerFreezeEvent.Notification.UnFroze": "凍結が解除されました!",
    "Omikuji.BadEvent.PlayerLocationSwapEvent.Notification.Avoided": "しかし幸運にも{0}は不運なイベントを回避しました!",
    "Omikuji.BadEvent.PlayerLocationSwapEvent.Notification.LocationSwapping": "すべてのプレイヤーの位置が入れ替わります!",
    "Omikuji.BadEvent.PlayerSlapEvent.Notification.Slapped": "{0}が叩かれました!",
    "Omikuji.LuckyEvent.GiveRandomItemEvent.Notification.ItemReceived": "そして{0}を受け取りました!",
    "Omikuji.LuckyEvent.PlayerHealEvent.Notification.Healed": "{0}のHPが{1}HPに回復しました!",
    "Omikuji.LuckyEvent.PlayerHealEvent.Notification.PlayerIsDead": "しかし残念ながら、{0}はすでに死んでいるため、HPを回復できません。",
    "Omikuji.LuckyEvent.PlayerRespawnAllEvent.Notification.NoOneAlive": "しかし残念ながら、誰も生きていないため何も起こらなかった。",
    "Omikuji.LuckyEvent.PlayerRespawnAllEvent.Notification.Respawn": "すべてのプレイヤーをリスポーンします!!!",
    "Omikuji.LuckyEvent.PlayerRespawnEvent.Notification.Respawn": "{0}がリスポーンされました!",
    "Omikuji.LuckyEvent.PlayerRespawnEvent.Notification.StillAlive": "しかし残念ながら、{0}はまだ生きているため何も起こらなかった。",
    "Omikuji.MiscEvent.ChickenSpawnEvent.Notification.ChickenSpawned": "(・∋・)コケ、コケコッコー",
    "Omikuji.MiscEvent.NothingEvent.Notification.ButNothingHappened": "しかし何も起こらなかった!",
    "Omikuji.MiscEvent.PlayerWishingEvent.Notification.Wishing": "{0}があなたの幸運を祈っています!",
    "Omikuji.MiscEvent.ScreenShakeEvent.Notification.PrepareForImpact": "{0}が火山を噴火させた! 衝撃に備えよ!!!"
}